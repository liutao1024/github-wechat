<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<groupId>cloud</groupId>
	<artifactId>wechat-boot</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>wechat-boot</name>
	<url>http://maven.apache.org</url>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.2.RELEASE</version>
	</parent>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<!-- <version>4.12</version> -->
			<scope>test</scope>
		</dependency>
		<!--web应用基本环境配置 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- 
			spring-boot-starter-data-redis：操作 Redis。
			spring-boot-starter-data-mongodb：操作 Mongodb。
			spring-boot-starter-data-jpa：操作 Mysql。
			spring-boot-starter-activemq：操作 Activemq。
		 -->
		<!-- 添加spring-boot-devtools实现热部署功能 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>
		<!-- 添加spring-boot-starter-actuator用于监控和管理自身应用信息的模块 -->
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<!-- spring-boot-maven-plugin插件就是打包spring boot应用的 -->
			<!-- 打包插件 -->
	        <plugin>
	            <groupId>org.springframework.boot</groupId>
	            <artifactId>spring-boot-maven-plugin</artifactId>
	            <configuration>
	                <executable>true</executable>
	                <!-- mainClass 配置的是我们的启动入口类,配置完成后可以通过 Maven的mvn clean package
	                	 命令进行编译打包操作.编译完成后在 target 目录下会生成对应的 jar包
	                	 部署的时候直接调用 java–jar xx.jar 即可启动应用
	                 -->
	                <mainClass>cn.spring.boot.BootApp</mainClass>
	            </configuration>
	        </plugin>
	        <!-- 编译插件, 指定JDK版本 -->
	        <plugin>
	            <groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-compiler-plugin</artifactId>
	            <configuration>
	                <source>1.8</source>
	                <target>1.8</target>
	            </configuration>
	        </plugin>
		</plugins>
	</build>
</project>
